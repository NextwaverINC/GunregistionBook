//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GRB.Console.GRB_WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GRB_WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class GRB_WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImagePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback getimgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentImagePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEditImagePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTblGunRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGunOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGunSumOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunBatBackupfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback logUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePercentErrImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertImgOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportImgErrOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback countAllDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback countAllDataByYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback countAllDataByBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImgHideOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEditImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveToFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveToFolderByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExpiredBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWaterMaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImgOfPrintWaterMaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback API_getRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDestroryBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDestroryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWebConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataWebConfigOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GRB_WebService() {
            this.Url = global::GRB.Console.Properties.Settings.Default.GRB_Console_GRB_WebService_GRB_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllVersionCompletedEventHandler GetAllVersionCompleted;
        
        /// <remarks/>
        public event GetBookCompletedEventHandler GetBookCompleted;
        
        /// <remarks/>
        public event GetBookByConditionCompletedEventHandler GetBookByConditionCompleted;
        
        /// <remarks/>
        public event GetPageCompletedEventHandler GetPageCompleted;
        
        /// <remarks/>
        public event GetPageVersionCompletedEventHandler GetPageVersionCompleted;
        
        /// <remarks/>
        public event SaveImagePageCompletedEventHandler SaveImagePageCompleted;
        
        /// <remarks/>
        public event UserAuthCompletedEventHandler UserAuthCompleted;
        
        /// <remarks/>
        public event getimgCompletedEventHandler getimgCompleted;
        
        /// <remarks/>
        public event GetCurrentImagePageCompletedEventHandler GetCurrentImagePageCompleted;
        
        /// <remarks/>
        public event GetImagePageCompletedEventHandler GetImagePageCompleted;
        
        /// <remarks/>
        public event GetEditImagePageCompletedEventHandler GetEditImagePageCompleted;
        
        /// <remarks/>
        public event GetImageUrlCompletedEventHandler GetImageUrlCompleted;
        
        /// <remarks/>
        public event GetTblGunRegCompletedEventHandler GetTblGunRegCompleted;
        
        /// <remarks/>
        public event GetDataGunCompletedEventHandler GetDataGunCompleted;
        
        /// <remarks/>
        public event GetDataGunSumCompletedEventHandler GetDataGunSumCompleted;
        
        /// <remarks/>
        public event RunBatBackupfileCompletedEventHandler RunBatBackupfileCompleted;
        
        /// <remarks/>
        public event logUserCompletedEventHandler logUserCompleted;
        
        /// <remarks/>
        public event getPDFCompletedEventHandler getPDFCompleted;
        
        /// <remarks/>
        public event updatePercentErrImgCompletedEventHandler updatePercentErrImgCompleted;
        
        /// <remarks/>
        public event insertLogCompletedEventHandler insertLogCompleted;
        
        /// <remarks/>
        public event insertImgCompletedEventHandler insertImgCompleted;
        
        /// <remarks/>
        public event reportImgErrCompletedEventHandler reportImgErrCompleted;
        
        /// <remarks/>
        public event reportLogCompletedEventHandler reportLogCompleted;
        
        /// <remarks/>
        public event countAllDataCompletedEventHandler countAllDataCompleted;
        
        /// <remarks/>
        public event countAllDataByYearCompletedEventHandler countAllDataByYearCompleted;
        
        /// <remarks/>
        public event countAllDataByBookCompletedEventHandler countAllDataByBookCompleted;
        
        /// <remarks/>
        public event GetDetailPageCompletedEventHandler GetDetailPageCompleted;
        
        /// <remarks/>
        public event getImgHideCompletedEventHandler getImgHideCompleted;
        
        /// <remarks/>
        public event SaveEditImageCompletedEventHandler SaveEditImageCompleted;
        
        /// <remarks/>
        public event MoveToFolderCompletedEventHandler MoveToFolderCompleted;
        
        /// <remarks/>
        public event MoveToFolderByIDCompletedEventHandler MoveToFolderByIDCompleted;
        
        /// <remarks/>
        public event DeleteFolderByIDCompletedEventHandler DeleteFolderByIDCompleted;
        
        /// <remarks/>
        public event DeleteLogByIDCompletedEventHandler DeleteLogByIDCompleted;
        
        /// <remarks/>
        public event getExpiredBookCompletedEventHandler getExpiredBookCompleted;
        
        /// <remarks/>
        public event SaveWaterMaskCompletedEventHandler SaveWaterMaskCompleted;
        
        /// <remarks/>
        public event getImgOfPrintWaterMaskCompletedEventHandler getImgOfPrintWaterMaskCompleted;
        
        /// <remarks/>
        public event API_getRecordCompletedEventHandler API_getRecordCompleted;
        
        /// <remarks/>
        public event getDestroryBookCompletedEventHandler getDestroryBookCompleted;
        
        /// <remarks/>
        public event DeleteDestroryByIDCompletedEventHandler DeleteDestroryByIDCompleted;
        
        /// <remarks/>
        public event setWebConfigCompletedEventHandler setWebConfigCompleted;
        
        /// <remarks/>
        public event getDataWebConfigCompletedEventHandler getDataWebConfigCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllVersion(int BookNo, int PageNo) {
            object[] results = this.Invoke("GetAllVersion", new object[] {
                        BookNo,
                        PageNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVersionAsync(int BookNo, int PageNo) {
            this.GetAllVersionAsync(BookNo, PageNo, null);
        }
        
        /// <remarks/>
        public void GetAllVersionAsync(int BookNo, int PageNo, object userState) {
            if ((this.GetAllVersionOperationCompleted == null)) {
                this.GetAllVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVersionOperationCompleted);
            }
            this.InvokeAsync("GetAllVersion", new object[] {
                        BookNo,
                        PageNo}, this.GetAllVersionOperationCompleted, userState);
        }
        
        private void OnGetAllVersionOperationCompleted(object arg) {
            if ((this.GetAllVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVersionCompleted(this, new GetAllVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBook(int BookNo) {
            object[] results = this.Invoke("GetBook", new object[] {
                        BookNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBookAsync(int BookNo) {
            this.GetBookAsync(BookNo, null);
        }
        
        /// <remarks/>
        public void GetBookAsync(int BookNo, object userState) {
            if ((this.GetBookOperationCompleted == null)) {
                this.GetBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookOperationCompleted);
            }
            this.InvokeAsync("GetBook", new object[] {
                        BookNo}, this.GetBookOperationCompleted, userState);
        }
        
        private void OnGetBookOperationCompleted(object arg) {
            if ((this.GetBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookCompleted(this, new GetBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBookByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBookByCondition(int BookNo, int BookYear) {
            object[] results = this.Invoke("GetBookByCondition", new object[] {
                        BookNo,
                        BookYear});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBookByConditionAsync(int BookNo, int BookYear) {
            this.GetBookByConditionAsync(BookNo, BookYear, null);
        }
        
        /// <remarks/>
        public void GetBookByConditionAsync(int BookNo, int BookYear, object userState) {
            if ((this.GetBookByConditionOperationCompleted == null)) {
                this.GetBookByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookByConditionOperationCompleted);
            }
            this.InvokeAsync("GetBookByCondition", new object[] {
                        BookNo,
                        BookYear}, this.GetBookByConditionOperationCompleted, userState);
        }
        
        private void OnGetBookByConditionOperationCompleted(object arg) {
            if ((this.GetBookByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookByConditionCompleted(this, new GetBookByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPage(int BookNo, int PageNo) {
            object[] results = this.Invoke("GetPage", new object[] {
                        BookNo,
                        PageNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageAsync(int BookNo, int PageNo) {
            this.GetPageAsync(BookNo, PageNo, null);
        }
        
        /// <remarks/>
        public void GetPageAsync(int BookNo, int PageNo, object userState) {
            if ((this.GetPageOperationCompleted == null)) {
                this.GetPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageOperationCompleted);
            }
            this.InvokeAsync("GetPage", new object[] {
                        BookNo,
                        PageNo}, this.GetPageOperationCompleted, userState);
        }
        
        private void OnGetPageOperationCompleted(object arg) {
            if ((this.GetPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageCompleted(this, new GetPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPageVersion(int BookNo, int PageNo, int Version) {
            object[] results = this.Invoke("GetPageVersion", new object[] {
                        BookNo,
                        PageNo,
                        Version});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageVersionAsync(int BookNo, int PageNo, int Version) {
            this.GetPageVersionAsync(BookNo, PageNo, Version, null);
        }
        
        /// <remarks/>
        public void GetPageVersionAsync(int BookNo, int PageNo, int Version, object userState) {
            if ((this.GetPageVersionOperationCompleted == null)) {
                this.GetPageVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageVersionOperationCompleted);
            }
            this.InvokeAsync("GetPageVersion", new object[] {
                        BookNo,
                        PageNo,
                        Version}, this.GetPageVersionOperationCompleted, userState);
        }
        
        private void OnGetPageVersionOperationCompleted(object arg) {
            if ((this.GetPageVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageVersionCompleted(this, new GetPageVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImagePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveImagePage(int BookNo, int PageNo, int Version, string ImgURL, string UserName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imageByte) {
            object[] results = this.Invoke("SaveImagePage", new object[] {
                        BookNo,
                        PageNo,
                        Version,
                        ImgURL,
                        UserName,
                        imageByte});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImagePageAsync(int BookNo, int PageNo, int Version, string ImgURL, string UserName, byte[] imageByte) {
            this.SaveImagePageAsync(BookNo, PageNo, Version, ImgURL, UserName, imageByte, null);
        }
        
        /// <remarks/>
        public void SaveImagePageAsync(int BookNo, int PageNo, int Version, string ImgURL, string UserName, byte[] imageByte, object userState) {
            if ((this.SaveImagePageOperationCompleted == null)) {
                this.SaveImagePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImagePageOperationCompleted);
            }
            this.InvokeAsync("SaveImagePage", new object[] {
                        BookNo,
                        PageNo,
                        Version,
                        ImgURL,
                        UserName,
                        imageByte}, this.SaveImagePageOperationCompleted, userState);
        }
        
        private void OnSaveImagePageOperationCompleted(object arg) {
            if ((this.SaveImagePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImagePageCompleted(this, new SaveImagePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UserAuth(string UserName, string Password) {
            object[] results = this.Invoke("UserAuth", new object[] {
                        UserName,
                        Password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void UserAuthAsync(string UserName, string Password) {
            this.UserAuthAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void UserAuthAsync(string UserName, string Password, object userState) {
            if ((this.UserAuthOperationCompleted == null)) {
                this.UserAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAuthOperationCompleted);
            }
            this.InvokeAsync("UserAuth", new object[] {
                        UserName,
                        Password}, this.UserAuthOperationCompleted, userState);
        }
        
        private void OnUserAuthOperationCompleted(object arg) {
            if ((this.UserAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAuthCompleted(this, new UserAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getimg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getimg(string pathImg) {
            object[] results = this.Invoke("getimg", new object[] {
                        pathImg});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getimgAsync(string pathImg) {
            this.getimgAsync(pathImg, null);
        }
        
        /// <remarks/>
        public void getimgAsync(string pathImg, object userState) {
            if ((this.getimgOperationCompleted == null)) {
                this.getimgOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetimgOperationCompleted);
            }
            this.InvokeAsync("getimg", new object[] {
                        pathImg}, this.getimgOperationCompleted, userState);
        }
        
        private void OngetimgOperationCompleted(object arg) {
            if ((this.getimgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getimgCompleted(this, new getimgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentImagePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCurrentImagePage(int BookNo, int PageNo) {
            object[] results = this.Invoke("GetCurrentImagePage", new object[] {
                        BookNo,
                        PageNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentImagePageAsync(int BookNo, int PageNo) {
            this.GetCurrentImagePageAsync(BookNo, PageNo, null);
        }
        
        /// <remarks/>
        public void GetCurrentImagePageAsync(int BookNo, int PageNo, object userState) {
            if ((this.GetCurrentImagePageOperationCompleted == null)) {
                this.GetCurrentImagePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentImagePageOperationCompleted);
            }
            this.InvokeAsync("GetCurrentImagePage", new object[] {
                        BookNo,
                        PageNo}, this.GetCurrentImagePageOperationCompleted, userState);
        }
        
        private void OnGetCurrentImagePageOperationCompleted(object arg) {
            if ((this.GetCurrentImagePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentImagePageCompleted(this, new GetCurrentImagePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImagePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImagePage(int BookNo, int PageNo, int PageVer) {
            object[] results = this.Invoke("GetImagePage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImagePageAsync(int BookNo, int PageNo, int PageVer) {
            this.GetImagePageAsync(BookNo, PageNo, PageVer, null);
        }
        
        /// <remarks/>
        public void GetImagePageAsync(int BookNo, int PageNo, int PageVer, object userState) {
            if ((this.GetImagePageOperationCompleted == null)) {
                this.GetImagePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagePageOperationCompleted);
            }
            this.InvokeAsync("GetImagePage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer}, this.GetImagePageOperationCompleted, userState);
        }
        
        private void OnGetImagePageOperationCompleted(object arg) {
            if ((this.GetImagePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagePageCompleted(this, new GetImagePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEditImagePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetEditImagePage(int BookNo, int PageNo, int PageVer) {
            object[] results = this.Invoke("GetEditImagePage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEditImagePageAsync(int BookNo, int PageNo, int PageVer) {
            this.GetEditImagePageAsync(BookNo, PageNo, PageVer, null);
        }
        
        /// <remarks/>
        public void GetEditImagePageAsync(int BookNo, int PageNo, int PageVer, object userState) {
            if ((this.GetEditImagePageOperationCompleted == null)) {
                this.GetEditImagePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEditImagePageOperationCompleted);
            }
            this.InvokeAsync("GetEditImagePage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer}, this.GetEditImagePageOperationCompleted, userState);
        }
        
        private void OnGetEditImagePageOperationCompleted(object arg) {
            if ((this.GetEditImagePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEditImagePageCompleted(this, new GetEditImagePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImageUrl(int BookNo, int PageNo, int PageVer) {
            object[] results = this.Invoke("GetImageUrl", new object[] {
                        BookNo,
                        PageNo,
                        PageVer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageUrlAsync(int BookNo, int PageNo, int PageVer) {
            this.GetImageUrlAsync(BookNo, PageNo, PageVer, null);
        }
        
        /// <remarks/>
        public void GetImageUrlAsync(int BookNo, int PageNo, int PageVer, object userState) {
            if ((this.GetImageUrlOperationCompleted == null)) {
                this.GetImageUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageUrlOperationCompleted);
            }
            this.InvokeAsync("GetImageUrl", new object[] {
                        BookNo,
                        PageNo,
                        PageVer}, this.GetImageUrlOperationCompleted, userState);
        }
        
        private void OnGetImageUrlOperationCompleted(object arg) {
            if ((this.GetImageUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageUrlCompleted(this, new GetImageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTblGunReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTblGunReg(
                    int BookNo, 
                    int PageNo, 
                    int PageVersion, 
                    string GunRegID, 
                    string GunNo, 
                    string GunGroup, 
                    string GunType, 
                    string GunSize, 
                    string GunBrand, 
                    int GunMaxShot, 
                    string GunBarrel, 
                    string GunColor, 
                    string GunOwner, 
                    string GunRegDate, 
                    string GunRemark, 
                    string GunCountry) {
            object[] results = this.Invoke("GetTblGunReg", new object[] {
                        BookNo,
                        PageNo,
                        PageVersion,
                        GunRegID,
                        GunNo,
                        GunGroup,
                        GunType,
                        GunSize,
                        GunBrand,
                        GunMaxShot,
                        GunBarrel,
                        GunColor,
                        GunOwner,
                        GunRegDate,
                        GunRemark,
                        GunCountry});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTblGunRegAsync(
                    int BookNo, 
                    int PageNo, 
                    int PageVersion, 
                    string GunRegID, 
                    string GunNo, 
                    string GunGroup, 
                    string GunType, 
                    string GunSize, 
                    string GunBrand, 
                    int GunMaxShot, 
                    string GunBarrel, 
                    string GunColor, 
                    string GunOwner, 
                    string GunRegDate, 
                    string GunRemark, 
                    string GunCountry) {
            this.GetTblGunRegAsync(BookNo, PageNo, PageVersion, GunRegID, GunNo, GunGroup, GunType, GunSize, GunBrand, GunMaxShot, GunBarrel, GunColor, GunOwner, GunRegDate, GunRemark, GunCountry, null);
        }
        
        /// <remarks/>
        public void GetTblGunRegAsync(
                    int BookNo, 
                    int PageNo, 
                    int PageVersion, 
                    string GunRegID, 
                    string GunNo, 
                    string GunGroup, 
                    string GunType, 
                    string GunSize, 
                    string GunBrand, 
                    int GunMaxShot, 
                    string GunBarrel, 
                    string GunColor, 
                    string GunOwner, 
                    string GunRegDate, 
                    string GunRemark, 
                    string GunCountry, 
                    object userState) {
            if ((this.GetTblGunRegOperationCompleted == null)) {
                this.GetTblGunRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTblGunRegOperationCompleted);
            }
            this.InvokeAsync("GetTblGunReg", new object[] {
                        BookNo,
                        PageNo,
                        PageVersion,
                        GunRegID,
                        GunNo,
                        GunGroup,
                        GunType,
                        GunSize,
                        GunBrand,
                        GunMaxShot,
                        GunBarrel,
                        GunColor,
                        GunOwner,
                        GunRegDate,
                        GunRemark,
                        GunCountry}, this.GetTblGunRegOperationCompleted, userState);
        }
        
        private void OnGetTblGunRegOperationCompleted(object arg) {
            if ((this.GetTblGunRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTblGunRegCompleted(this, new GetTblGunRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataGun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataGun(string DateBegin, string DateEnd, string pStatus) {
            object[] results = this.Invoke("GetDataGun", new object[] {
                        DateBegin,
                        DateEnd,
                        pStatus});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGunAsync(string DateBegin, string DateEnd, string pStatus) {
            this.GetDataGunAsync(DateBegin, DateEnd, pStatus, null);
        }
        
        /// <remarks/>
        public void GetDataGunAsync(string DateBegin, string DateEnd, string pStatus, object userState) {
            if ((this.GetDataGunOperationCompleted == null)) {
                this.GetDataGunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGunOperationCompleted);
            }
            this.InvokeAsync("GetDataGun", new object[] {
                        DateBegin,
                        DateEnd,
                        pStatus}, this.GetDataGunOperationCompleted, userState);
        }
        
        private void OnGetDataGunOperationCompleted(object arg) {
            if ((this.GetDataGunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGunCompleted(this, new GetDataGunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataGunSum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataGunSum(string DateBegin, string DateEnd, string pStatus) {
            object[] results = this.Invoke("GetDataGunSum", new object[] {
                        DateBegin,
                        DateEnd,
                        pStatus});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGunSumAsync(string DateBegin, string DateEnd, string pStatus) {
            this.GetDataGunSumAsync(DateBegin, DateEnd, pStatus, null);
        }
        
        /// <remarks/>
        public void GetDataGunSumAsync(string DateBegin, string DateEnd, string pStatus, object userState) {
            if ((this.GetDataGunSumOperationCompleted == null)) {
                this.GetDataGunSumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGunSumOperationCompleted);
            }
            this.InvokeAsync("GetDataGunSum", new object[] {
                        DateBegin,
                        DateEnd,
                        pStatus}, this.GetDataGunSumOperationCompleted, userState);
        }
        
        private void OnGetDataGunSumOperationCompleted(object arg) {
            if ((this.GetDataGunSumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGunSumCompleted(this, new GetDataGunSumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RunBatBackupfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RunBatBackupfile(int bookno) {
            object[] results = this.Invoke("RunBatBackupfile", new object[] {
                        bookno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RunBatBackupfileAsync(int bookno) {
            this.RunBatBackupfileAsync(bookno, null);
        }
        
        /// <remarks/>
        public void RunBatBackupfileAsync(int bookno, object userState) {
            if ((this.RunBatBackupfileOperationCompleted == null)) {
                this.RunBatBackupfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunBatBackupfileOperationCompleted);
            }
            this.InvokeAsync("RunBatBackupfile", new object[] {
                        bookno}, this.RunBatBackupfileOperationCompleted, userState);
        }
        
        private void OnRunBatBackupfileOperationCompleted(object arg) {
            if ((this.RunBatBackupfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunBatBackupfileCompleted(this, new RunBatBackupfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logUser(string UserName, string MenuUse, string UserProcess, bool ProcessResult, string strList) {
            this.Invoke("logUser", new object[] {
                        UserName,
                        MenuUse,
                        UserProcess,
                        ProcessResult,
                        strList});
        }
        
        /// <remarks/>
        public void logUserAsync(string UserName, string MenuUse, string UserProcess, bool ProcessResult, string strList) {
            this.logUserAsync(UserName, MenuUse, UserProcess, ProcessResult, strList, null);
        }
        
        /// <remarks/>
        public void logUserAsync(string UserName, string MenuUse, string UserProcess, bool ProcessResult, string strList, object userState) {
            if ((this.logUserOperationCompleted == null)) {
                this.logUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogUserOperationCompleted);
            }
            this.InvokeAsync("logUser", new object[] {
                        UserName,
                        MenuUse,
                        UserProcess,
                        ProcessResult,
                        strList}, this.logUserOperationCompleted, userState);
        }
        
        private void OnlogUserOperationCompleted(object arg) {
            if ((this.logUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPDF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getPDF(string pathPDF) {
            object[] results = this.Invoke("getPDF", new object[] {
                        pathPDF});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPDFAsync(string pathPDF) {
            this.getPDFAsync(pathPDF, null);
        }
        
        /// <remarks/>
        public void getPDFAsync(string pathPDF, object userState) {
            if ((this.getPDFOperationCompleted == null)) {
                this.getPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPDFOperationCompleted);
            }
            this.InvokeAsync("getPDF", new object[] {
                        pathPDF}, this.getPDFOperationCompleted, userState);
        }
        
        private void OngetPDFOperationCompleted(object arg) {
            if ((this.getPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPDFCompleted(this, new getPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePercentErrImg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePercentErrImg(int BookNo, int PageNo, decimal PercentErr) {
            object[] results = this.Invoke("updatePercentErrImg", new object[] {
                        BookNo,
                        PageNo,
                        PercentErr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePercentErrImgAsync(int BookNo, int PageNo, decimal PercentErr) {
            this.updatePercentErrImgAsync(BookNo, PageNo, PercentErr, null);
        }
        
        /// <remarks/>
        public void updatePercentErrImgAsync(int BookNo, int PageNo, decimal PercentErr, object userState) {
            if ((this.updatePercentErrImgOperationCompleted == null)) {
                this.updatePercentErrImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePercentErrImgOperationCompleted);
            }
            this.InvokeAsync("updatePercentErrImg", new object[] {
                        BookNo,
                        PageNo,
                        PercentErr}, this.updatePercentErrImgOperationCompleted, userState);
        }
        
        private void OnupdatePercentErrImgOperationCompleted(object arg) {
            if ((this.updatePercentErrImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePercentErrImgCompleted(this, new updatePercentErrImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertLog(string UserName, string Pocess, string Detail, string DateUpdate) {
            object[] results = this.Invoke("insertLog", new object[] {
                        UserName,
                        Pocess,
                        Detail,
                        DateUpdate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertLogAsync(string UserName, string Pocess, string Detail, string DateUpdate) {
            this.insertLogAsync(UserName, Pocess, Detail, DateUpdate, null);
        }
        
        /// <remarks/>
        public void insertLogAsync(string UserName, string Pocess, string Detail, string DateUpdate, object userState) {
            if ((this.insertLogOperationCompleted == null)) {
                this.insertLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLogOperationCompleted);
            }
            this.InvokeAsync("insertLog", new object[] {
                        UserName,
                        Pocess,
                        Detail,
                        DateUpdate}, this.insertLogOperationCompleted, userState);
        }
        
        private void OninsertLogOperationCompleted(object arg) {
            if ((this.insertLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLogCompleted(this, new insertLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertImg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertImg(int BookNo, int PageNo, string Detail) {
            object[] results = this.Invoke("insertImg", new object[] {
                        BookNo,
                        PageNo,
                        Detail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertImgAsync(int BookNo, int PageNo, string Detail) {
            this.insertImgAsync(BookNo, PageNo, Detail, null);
        }
        
        /// <remarks/>
        public void insertImgAsync(int BookNo, int PageNo, string Detail, object userState) {
            if ((this.insertImgOperationCompleted == null)) {
                this.insertImgOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertImgOperationCompleted);
            }
            this.InvokeAsync("insertImg", new object[] {
                        BookNo,
                        PageNo,
                        Detail}, this.insertImgOperationCompleted, userState);
        }
        
        private void OninsertImgOperationCompleted(object arg) {
            if ((this.insertImgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertImgCompleted(this, new insertImgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/reportImgErr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable reportImgErr() {
            object[] results = this.Invoke("reportImgErr", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void reportImgErrAsync() {
            this.reportImgErrAsync(null);
        }
        
        /// <remarks/>
        public void reportImgErrAsync(object userState) {
            if ((this.reportImgErrOperationCompleted == null)) {
                this.reportImgErrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportImgErrOperationCompleted);
            }
            this.InvokeAsync("reportImgErr", new object[0], this.reportImgErrOperationCompleted, userState);
        }
        
        private void OnreportImgErrOperationCompleted(object arg) {
            if ((this.reportImgErrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportImgErrCompleted(this, new reportImgErrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/reportLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable reportLog() {
            object[] results = this.Invoke("reportLog", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void reportLogAsync() {
            this.reportLogAsync(null);
        }
        
        /// <remarks/>
        public void reportLogAsync(object userState) {
            if ((this.reportLogOperationCompleted == null)) {
                this.reportLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportLogOperationCompleted);
            }
            this.InvokeAsync("reportLog", new object[0], this.reportLogOperationCompleted, userState);
        }
        
        private void OnreportLogOperationCompleted(object arg) {
            if ((this.reportLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportLogCompleted(this, new reportLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/countAllData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable countAllData() {
            object[] results = this.Invoke("countAllData", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void countAllDataAsync() {
            this.countAllDataAsync(null);
        }
        
        /// <remarks/>
        public void countAllDataAsync(object userState) {
            if ((this.countAllDataOperationCompleted == null)) {
                this.countAllDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountAllDataOperationCompleted);
            }
            this.InvokeAsync("countAllData", new object[0], this.countAllDataOperationCompleted, userState);
        }
        
        private void OncountAllDataOperationCompleted(object arg) {
            if ((this.countAllDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countAllDataCompleted(this, new countAllDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/countAllDataByYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable countAllDataByYear() {
            object[] results = this.Invoke("countAllDataByYear", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void countAllDataByYearAsync() {
            this.countAllDataByYearAsync(null);
        }
        
        /// <remarks/>
        public void countAllDataByYearAsync(object userState) {
            if ((this.countAllDataByYearOperationCompleted == null)) {
                this.countAllDataByYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountAllDataByYearOperationCompleted);
            }
            this.InvokeAsync("countAllDataByYear", new object[0], this.countAllDataByYearOperationCompleted, userState);
        }
        
        private void OncountAllDataByYearOperationCompleted(object arg) {
            if ((this.countAllDataByYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countAllDataByYearCompleted(this, new countAllDataByYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/countAllDataByBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable countAllDataByBook() {
            object[] results = this.Invoke("countAllDataByBook", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void countAllDataByBookAsync() {
            this.countAllDataByBookAsync(null);
        }
        
        /// <remarks/>
        public void countAllDataByBookAsync(object userState) {
            if ((this.countAllDataByBookOperationCompleted == null)) {
                this.countAllDataByBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountAllDataByBookOperationCompleted);
            }
            this.InvokeAsync("countAllDataByBook", new object[0], this.countAllDataByBookOperationCompleted, userState);
        }
        
        private void OncountAllDataByBookOperationCompleted(object arg) {
            if ((this.countAllDataByBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countAllDataByBookCompleted(this, new countAllDataByBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDetailPage(string BookNo, string PageNo, string PageVer) {
            object[] results = this.Invoke("GetDetailPage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailPageAsync(string BookNo, string PageNo, string PageVer) {
            this.GetDetailPageAsync(BookNo, PageNo, PageVer, null);
        }
        
        /// <remarks/>
        public void GetDetailPageAsync(string BookNo, string PageNo, string PageVer, object userState) {
            if ((this.GetDetailPageOperationCompleted == null)) {
                this.GetDetailPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailPageOperationCompleted);
            }
            this.InvokeAsync("GetDetailPage", new object[] {
                        BookNo,
                        PageNo,
                        PageVer}, this.GetDetailPageOperationCompleted, userState);
        }
        
        private void OnGetDetailPageOperationCompleted(object arg) {
            if ((this.GetDetailPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailPageCompleted(this, new GetDetailPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getImgHide", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getImgHide(int BookNo, int PageNo, int PageVer, string LineNo) {
            object[] results = this.Invoke("getImgHide", new object[] {
                        BookNo,
                        PageNo,
                        PageVer,
                        LineNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getImgHideAsync(int BookNo, int PageNo, int PageVer, string LineNo) {
            this.getImgHideAsync(BookNo, PageNo, PageVer, LineNo, null);
        }
        
        /// <remarks/>
        public void getImgHideAsync(int BookNo, int PageNo, int PageVer, string LineNo, object userState) {
            if ((this.getImgHideOperationCompleted == null)) {
                this.getImgHideOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImgHideOperationCompleted);
            }
            this.InvokeAsync("getImgHide", new object[] {
                        BookNo,
                        PageNo,
                        PageVer,
                        LineNo}, this.getImgHideOperationCompleted, userState);
        }
        
        private void OngetImgHideOperationCompleted(object arg) {
            if ((this.getImgHideCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImgHideCompleted(this, new getImgHideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveEditImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveEditImage(int BookNo, int PageNo, int VerNo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bin) {
            object[] results = this.Invoke("SaveEditImage", new object[] {
                        BookNo,
                        PageNo,
                        VerNo,
                        bin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveEditImageAsync(int BookNo, int PageNo, int VerNo, byte[] bin) {
            this.SaveEditImageAsync(BookNo, PageNo, VerNo, bin, null);
        }
        
        /// <remarks/>
        public void SaveEditImageAsync(int BookNo, int PageNo, int VerNo, byte[] bin, object userState) {
            if ((this.SaveEditImageOperationCompleted == null)) {
                this.SaveEditImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEditImageOperationCompleted);
            }
            this.InvokeAsync("SaveEditImage", new object[] {
                        BookNo,
                        PageNo,
                        VerNo,
                        bin}, this.SaveEditImageOperationCompleted, userState);
        }
        
        private void OnSaveEditImageOperationCompleted(object arg) {
            if ((this.SaveEditImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEditImageCompleted(this, new SaveEditImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveToFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveToFolder(int BookNo, string FolderType) {
            object[] results = this.Invoke("MoveToFolder", new object[] {
                        BookNo,
                        FolderType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveToFolderAsync(int BookNo, string FolderType) {
            this.MoveToFolderAsync(BookNo, FolderType, null);
        }
        
        /// <remarks/>
        public void MoveToFolderAsync(int BookNo, string FolderType, object userState) {
            if ((this.MoveToFolderOperationCompleted == null)) {
                this.MoveToFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveToFolderOperationCompleted);
            }
            this.InvokeAsync("MoveToFolder", new object[] {
                        BookNo,
                        FolderType}, this.MoveToFolderOperationCompleted, userState);
        }
        
        private void OnMoveToFolderOperationCompleted(object arg) {
            if ((this.MoveToFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveToFolderCompleted(this, new MoveToFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveToFolderByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveToFolderByID(int ID, string FolderType) {
            object[] results = this.Invoke("MoveToFolderByID", new object[] {
                        ID,
                        FolderType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveToFolderByIDAsync(int ID, string FolderType) {
            this.MoveToFolderByIDAsync(ID, FolderType, null);
        }
        
        /// <remarks/>
        public void MoveToFolderByIDAsync(int ID, string FolderType, object userState) {
            if ((this.MoveToFolderByIDOperationCompleted == null)) {
                this.MoveToFolderByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveToFolderByIDOperationCompleted);
            }
            this.InvokeAsync("MoveToFolderByID", new object[] {
                        ID,
                        FolderType}, this.MoveToFolderByIDOperationCompleted, userState);
        }
        
        private void OnMoveToFolderByIDOperationCompleted(object arg) {
            if ((this.MoveToFolderByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveToFolderByIDCompleted(this, new MoveToFolderByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFolderByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFolderByID(int ID, string FolderType) {
            object[] results = this.Invoke("DeleteFolderByID", new object[] {
                        ID,
                        FolderType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFolderByIDAsync(int ID, string FolderType) {
            this.DeleteFolderByIDAsync(ID, FolderType, null);
        }
        
        /// <remarks/>
        public void DeleteFolderByIDAsync(int ID, string FolderType, object userState) {
            if ((this.DeleteFolderByIDOperationCompleted == null)) {
                this.DeleteFolderByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteFolderByID", new object[] {
                        ID,
                        FolderType}, this.DeleteFolderByIDOperationCompleted, userState);
        }
        
        private void OnDeleteFolderByIDOperationCompleted(object arg) {
            if ((this.DeleteFolderByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderByIDCompleted(this, new DeleteFolderByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLogByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogByID(string ID) {
            object[] results = this.Invoke("DeleteLogByID", new object[] {
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogByIDAsync(string ID) {
            this.DeleteLogByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogByIDAsync(string ID, object userState) {
            if ((this.DeleteLogByIDOperationCompleted == null)) {
                this.DeleteLogByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLogByID", new object[] {
                        ID}, this.DeleteLogByIDOperationCompleted, userState);
        }
        
        private void OnDeleteLogByIDOperationCompleted(object arg) {
            if ((this.DeleteLogByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogByIDCompleted(this, new DeleteLogByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getExpiredBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getExpiredBook() {
            object[] results = this.Invoke("getExpiredBook", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getExpiredBookAsync() {
            this.getExpiredBookAsync(null);
        }
        
        /// <remarks/>
        public void getExpiredBookAsync(object userState) {
            if ((this.getExpiredBookOperationCompleted == null)) {
                this.getExpiredBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExpiredBookOperationCompleted);
            }
            this.InvokeAsync("getExpiredBook", new object[0], this.getExpiredBookOperationCompleted, userState);
        }
        
        private void OngetExpiredBookOperationCompleted(object arg) {
            if ((this.getExpiredBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExpiredBookCompleted(this, new getExpiredBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveWaterMask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveWaterMask(string ImgURL, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imageByte) {
            object[] results = this.Invoke("SaveWaterMask", new object[] {
                        ImgURL,
                        imageByte});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWaterMaskAsync(string ImgURL, byte[] imageByte) {
            this.SaveWaterMaskAsync(ImgURL, imageByte, null);
        }
        
        /// <remarks/>
        public void SaveWaterMaskAsync(string ImgURL, byte[] imageByte, object userState) {
            if ((this.SaveWaterMaskOperationCompleted == null)) {
                this.SaveWaterMaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWaterMaskOperationCompleted);
            }
            this.InvokeAsync("SaveWaterMask", new object[] {
                        ImgURL,
                        imageByte}, this.SaveWaterMaskOperationCompleted, userState);
        }
        
        private void OnSaveWaterMaskOperationCompleted(object arg) {
            if ((this.SaveWaterMaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWaterMaskCompleted(this, new SaveWaterMaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getImgOfPrintWaterMask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getImgOfPrintWaterMask(int BookNo, int PageNo, int PageVer, string urlWaterMask) {
            object[] results = this.Invoke("getImgOfPrintWaterMask", new object[] {
                        BookNo,
                        PageNo,
                        PageVer,
                        urlWaterMask});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getImgOfPrintWaterMaskAsync(int BookNo, int PageNo, int PageVer, string urlWaterMask) {
            this.getImgOfPrintWaterMaskAsync(BookNo, PageNo, PageVer, urlWaterMask, null);
        }
        
        /// <remarks/>
        public void getImgOfPrintWaterMaskAsync(int BookNo, int PageNo, int PageVer, string urlWaterMask, object userState) {
            if ((this.getImgOfPrintWaterMaskOperationCompleted == null)) {
                this.getImgOfPrintWaterMaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImgOfPrintWaterMaskOperationCompleted);
            }
            this.InvokeAsync("getImgOfPrintWaterMask", new object[] {
                        BookNo,
                        PageNo,
                        PageVer,
                        urlWaterMask}, this.getImgOfPrintWaterMaskOperationCompleted, userState);
        }
        
        private void OngetImgOfPrintWaterMaskOperationCompleted(object arg) {
            if ((this.getImgOfPrintWaterMaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImgOfPrintWaterMaskCompleted(this, new getImgOfPrintWaterMaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/API_getRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable API_getRecord(string GunRegID) {
            object[] results = this.Invoke("API_getRecord", new object[] {
                        GunRegID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void API_getRecordAsync(string GunRegID) {
            this.API_getRecordAsync(GunRegID, null);
        }
        
        /// <remarks/>
        public void API_getRecordAsync(string GunRegID, object userState) {
            if ((this.API_getRecordOperationCompleted == null)) {
                this.API_getRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPI_getRecordOperationCompleted);
            }
            this.InvokeAsync("API_getRecord", new object[] {
                        GunRegID}, this.API_getRecordOperationCompleted, userState);
        }
        
        private void OnAPI_getRecordOperationCompleted(object arg) {
            if ((this.API_getRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.API_getRecordCompleted(this, new API_getRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDestroryBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getDestroryBook() {
            object[] results = this.Invoke("getDestroryBook", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getDestroryBookAsync() {
            this.getDestroryBookAsync(null);
        }
        
        /// <remarks/>
        public void getDestroryBookAsync(object userState) {
            if ((this.getDestroryBookOperationCompleted == null)) {
                this.getDestroryBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDestroryBookOperationCompleted);
            }
            this.InvokeAsync("getDestroryBook", new object[0], this.getDestroryBookOperationCompleted, userState);
        }
        
        private void OngetDestroryBookOperationCompleted(object arg) {
            if ((this.getDestroryBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDestroryBookCompleted(this, new getDestroryBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDestroryByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteDestroryByID(int ID, string FolderType) {
            object[] results = this.Invoke("DeleteDestroryByID", new object[] {
                        ID,
                        FolderType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDestroryByIDAsync(int ID, string FolderType) {
            this.DeleteDestroryByIDAsync(ID, FolderType, null);
        }
        
        /// <remarks/>
        public void DeleteDestroryByIDAsync(int ID, string FolderType, object userState) {
            if ((this.DeleteDestroryByIDOperationCompleted == null)) {
                this.DeleteDestroryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDestroryByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteDestroryByID", new object[] {
                        ID,
                        FolderType}, this.DeleteDestroryByIDOperationCompleted, userState);
        }
        
        private void OnDeleteDestroryByIDOperationCompleted(object arg) {
            if ((this.DeleteDestroryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDestroryByIDCompleted(this, new DeleteDestroryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setWebConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setWebConfig(string _imgPath) {
            object[] results = this.Invoke("setWebConfig", new object[] {
                        _imgPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setWebConfigAsync(string _imgPath) {
            this.setWebConfigAsync(_imgPath, null);
        }
        
        /// <remarks/>
        public void setWebConfigAsync(string _imgPath, object userState) {
            if ((this.setWebConfigOperationCompleted == null)) {
                this.setWebConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWebConfigOperationCompleted);
            }
            this.InvokeAsync("setWebConfig", new object[] {
                        _imgPath}, this.setWebConfigOperationCompleted, userState);
        }
        
        private void OnsetWebConfigOperationCompleted(object arg) {
            if ((this.setWebConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWebConfigCompleted(this, new setWebConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDataWebConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDataWebConfig() {
            object[] results = this.Invoke("getDataWebConfig", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataWebConfigAsync() {
            this.getDataWebConfigAsync(null);
        }
        
        /// <remarks/>
        public void getDataWebConfigAsync(object userState) {
            if ((this.getDataWebConfigOperationCompleted == null)) {
                this.getDataWebConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataWebConfigOperationCompleted);
            }
            this.InvokeAsync("getDataWebConfig", new object[0], this.getDataWebConfigOperationCompleted, userState);
        }
        
        private void OngetDataWebConfigOperationCompleted(object arg) {
            if ((this.getDataWebConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataWebConfigCompleted(this, new getDataWebConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllVersionCompletedEventHandler(object sender, GetAllVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBookCompletedEventHandler(object sender, GetBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBookByConditionCompletedEventHandler(object sender, GetBookByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPageCompletedEventHandler(object sender, GetPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPageVersionCompletedEventHandler(object sender, GetPageVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveImagePageCompletedEventHandler(object sender, SaveImagePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImagePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImagePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UserAuthCompletedEventHandler(object sender, UserAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getimgCompletedEventHandler(object sender, getimgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getimgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getimgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCurrentImagePageCompletedEventHandler(object sender, GetCurrentImagePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentImagePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentImagePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetImagePageCompletedEventHandler(object sender, GetImagePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEditImagePageCompletedEventHandler(object sender, GetEditImagePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEditImagePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEditImagePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetImageUrlCompletedEventHandler(object sender, GetImageUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTblGunRegCompletedEventHandler(object sender, GetTblGunRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTblGunRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTblGunRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDataGunCompletedEventHandler(object sender, GetDataGunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDataGunSumCompletedEventHandler(object sender, GetDataGunSumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGunSumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGunSumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RunBatBackupfileCompletedEventHandler(object sender, RunBatBackupfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunBatBackupfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunBatBackupfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void logUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getPDFCompletedEventHandler(object sender, getPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void updatePercentErrImgCompletedEventHandler(object sender, updatePercentErrImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePercentErrImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePercentErrImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void insertLogCompletedEventHandler(object sender, insertLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void insertImgCompletedEventHandler(object sender, insertImgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertImgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertImgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void reportImgErrCompletedEventHandler(object sender, reportImgErrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportImgErrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportImgErrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void reportLogCompletedEventHandler(object sender, reportLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void countAllDataCompletedEventHandler(object sender, countAllDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void countAllDataByYearCompletedEventHandler(object sender, countAllDataByYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countAllDataByYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countAllDataByYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void countAllDataByBookCompletedEventHandler(object sender, countAllDataByBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countAllDataByBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countAllDataByBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDetailPageCompletedEventHandler(object sender, GetDetailPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getImgHideCompletedEventHandler(object sender, getImgHideCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImgHideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImgHideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveEditImageCompletedEventHandler(object sender, SaveEditImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveEditImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveEditImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MoveToFolderCompletedEventHandler(object sender, MoveToFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveToFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveToFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MoveToFolderByIDCompletedEventHandler(object sender, MoveToFolderByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveToFolderByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveToFolderByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteFolderByIDCompletedEventHandler(object sender, DeleteFolderByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFolderByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFolderByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteLogByIDCompletedEventHandler(object sender, DeleteLogByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getExpiredBookCompletedEventHandler(object sender, getExpiredBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExpiredBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExpiredBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveWaterMaskCompletedEventHandler(object sender, SaveWaterMaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWaterMaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWaterMaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getImgOfPrintWaterMaskCompletedEventHandler(object sender, getImgOfPrintWaterMaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImgOfPrintWaterMaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImgOfPrintWaterMaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void API_getRecordCompletedEventHandler(object sender, API_getRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class API_getRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal API_getRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getDestroryBookCompletedEventHandler(object sender, getDestroryBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDestroryBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDestroryBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteDestroryByIDCompletedEventHandler(object sender, DeleteDestroryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDestroryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDestroryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void setWebConfigCompletedEventHandler(object sender, setWebConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setWebConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setWebConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getDataWebConfigCompletedEventHandler(object sender, getDataWebConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataWebConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataWebConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591